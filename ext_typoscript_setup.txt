plugin.tx_wecsermons_pi1 {

	userFunc = tx_wecsermons_pi1->main
	
	useStoragePid	 = {$plugin.tx_wecsermons_pi1.useStoragePid}
	pidSingleView = {$plugin.tx_wecsermons_pi1.pidSingleView}
	pidListView = {$plugin.tx_wecsermons_pi1.pidListView}
	
	# Whether the extension caches content or not
	allowCaching = {$plugin.tx_wecsermons_pi1.allowCaching}

	# Rendering of text items. re-use the RTE parseFunc configuration for normal content
	general_stdWrap {
		parseFunc < tt_content.text.20.parseFunc
	}
	
	# General wrap for dates in the wec_sermons extension
	general_dateWrap {
		strftime = %A,  %b. %d %Y
	}
	
		#	Marker based template file, which defines each view
	templateFile = {$plugin.tx_wecsermons_pi1.file.templateFile}

		# List of tables that a view can be generated from
	allowedTables = tx_wecsermons_sermons,tx_wecsermons_series,tx_wecsermons_resources,tx_wecsermons_topics,tx_wecsermons_liturgical_season,tx_wecsermons_speakers
	
		

	#	Single view configuration
	singleView {
	
		back = TEXT
		back {
			parseFunc < tt_content.text.20.parseFunc
		}
		
		layoutCode = 
	
		tx_wecsermons_sermons {

				#	Wrap for the title column
			title = TEXT
			title {
				wrap = |
				parseFunc < tt_content.text.20.parseFunc
			}
			
				#	Specific date wrap for the occurance_date column in tx_wecsermons_sermons table
			occurance = TEXT
			occurance {
				strftime = %A,  %b. %d %Y
				wrap = |<br/>
			}
			
			description = TEXT
			description {
				crop = 75|...
				stripHtml = 1
				parseFunc < tt_content.text.20.parseFunc
				wrap = <p class='bodytext'>|<p>
				field = description
			}

			scripture = TEXT
			scripture {
				wrap = |<br/>
			}
			
			graphic = IMAGE
			graphic {
				wrap = |<br/>
				border = 1
				file {
					width = 128m
					height = 128m
				}
				imageLinkWrap = 1
				imageLinkWrap {
					enable = 1
					JSwindow = 1
					JSwindow.expand = 20,20
				}
			}

			topics = TEXT
			topics {
				wrap = <div class="tx-wecsermons-sermon-topics">|</div>
			}
			
			resources = TEXT
			resources {
				wrap = <div class="tx-wecsermons-sermon-resources">|</div>
			}

			speakers = TEXT 
			speakers {
				wrap = <div class="tx-wecsermons-sermon-speakers">|</div>

			}
			
			series = TEXT
			series {
				wrap = <div class="tx-wecsermons-sermon-series">|</div>
			}
				
		}
		
		tx_wecsermons_resources {
		
			title = TEXT
			title {
				wrap = |<br/>
			}
			
			graphic = IMAGE
			graphic {
				file {
					width = 32m
					height = 32m
				}

			}

			description = TEXT
			description {
				crop = 75|...
				parseFunc < tt_content.text.20.parseFunc
			}
	
		}
		
		tx_wecsermons_series {
		
			title = TEXT
			title {
				wrap = |<br/>
			}
			
			graphic = IMAGE
			graphic {
				wrap = |<br/>
			}

			description = TEXT
			description {
				crop = 75|...
				parseFunc < tt_content.text.20.parseFunc
			}
	
			scripture = TEXT
			scripture {
				wrap = |<br/>
			}

			topics = TEXT 
			topics {
				wrap = |<br/>
				parseFunc < tt_content.text.20.parseFunc
			}

			startdate = TEXT
			startdate {
				strftime = %A,  %b. %d %Y
				wrap = |<br/>
			}

			enddate = TEXT
			enddate {
				strftime = %A,  %b. %d %Y
				wrap = |<br/>
			}
		
		}
		
		tx_wecsermons_speakers {
				
				# Specifies whether we use the url field when generating the speaker_link wrappedSubart		
			linktoUrl = 
			
			photo < plugin.tx_wecsermons_pi1.singleView.tx_wecsermons_sermons.graphic
			photo {
				wrap = |<br/>
			}

			firstname = TEXT
			firstname {
				wrap = |
			}
			
			lastname = TEXT
			lastname {
				wrap = |
			}

			url = TEXT
			url {
				wrap = |<br/>
				typolink = 1
				typolink {
					parameter.field = url
					extTarget = _blank
				}
				value= |
			}

			email = TEXT
			email {
				typolink = 1
				typolink.parameter.field = email		
				wrap = |<br/>
				parseFunc < tt_content.text.20.parseFunc

			}

		}
		
		tx_wecsermons_topics {
			
			title = TEXT
			title {
				wrap = |<br/>
			}
			
			description = TEXT
			description {
				crop = 75|...
				parseFunc < tt_content.text.20.parseFunc
			}

		}	
	}
	
	# 
	listView {

			# list of column names added to the order by SQL clause
		orderByList = startdate
		
			#	How many results to show on each page
		results_at_a_time = {$plugin.tx_wecsermons_pi1.listView.results_at_a_time}
		
			# Maximum number of pages that are shown in the page browser
		maxPages = {$plugin.tx_wecsermons_pi1.listView.maxPages}
		
			#	A string value appended to the CSS class name of odd rows of a list, [tx-wecsermons-pi1-{alternatingClass}]
		alternatingClass = {$plugin.tx_wecsermons_pi1.listView.alternatingClass}

			# General formatting of a date in list view
		general_dateWrap {
			strftime = %A,  %b. %d %Y
		}
		
			# Table that records will be shown from
		detail_table = tx_wecsermons_sermons
		
			# Table that records in detail will be grouped by
		group_table = 
		
		tx_wecsermons_sermons {

				# Allowed data columns to search in
			searchFieldList = title,description,related_scripture,keywords
		
				#	Wrap for the title column
			title = TEXT
			title {
				wrap = |<br/>
				parseFunc < tt_content.text.20.parseFunc
			}
			
				#	Specific date wrap for the occurance_date column in tx_wecsermons_sermons table
			occurance_date = TEXT
			occurance_date {
				strftime = %A,  %b. %d %Y
				wrap = |<br/>
			}
			
			description = TEXT
			description {
				crop = 75|...
				stripHtml = 1
				wrap = <p class='bodytext'>|<p>
				field = description
			}

			scripture = TEXT
			scripture {
				wrap = |<br/>
			}

			topics = TEXT
			topics {
				wrap = <div class="tx-wecsermons-topics">|</div>
			}
			
			series = TEXT
			series {
				wrap = <div class="tx-wecsermons-series">|</div>
			}
			
			resources = TEXT
			resources {
				wrap = <div class="tx-wecsermons-resources">|</div>
			}
			
			
			graphic = IMAGE
			graphic {
				wrap = |<br/>
				border = 1
				file {
					width = 128m
					height = 128m
				}
				imageLinkWrap = 1
				imageLinkWrap {
					enable = 1
					JSwindow = 1
					JSwindow.expand = 20,20
				}
			}

			speakers = TEXT
			speakers {
				wrap = <div class="tx-wecsermons-speakers">|</div>

			}
				
		}
		
		tx_wecsermons_resources {
		
				# Allowed data columns to search in
			searchFieldList = title,description,related_scripture,keywords
			
			title = TEXT
			title {
				wrap = |<br/>
			}
			
			graphic = IMAGE
			graphic {
				wrap = |<br/>
			}

			description = TEXT
			description {
				crop = 150|...
				parseFunc < tt_content.text.20.parseFunc
			}
	
		}
		
		tx_wecsermons_series {

				# Allowed data columns to search in
			searchFieldList = title,description,related_scripture,keywords		

			title = TEXT
			title {
				wrap = |<br/>
			}
			
			graphic < plugin.tx_wecsermons_pi1.tx_wecsermons_sermons.graphic
			graphic {
				wrap = |
			}

			description = TEXT
			description {
				crop = 150|...
				parseFunc < tt_content.text.20.parseFunc
			}
	
			scripture = TEXT
			scripture {
				wrap = |<br/>
			}

			topics = TEXT
			topics {
				wrap = |<br/>
				parseFunc < tt_content.text.20.parseFunc
			}

			startdate = TEXT
			startdate {
				strftime = %A,  %b. %d %Y
				wrap = |<br/>
			}

			enddate = TEXT
			enddate {
				strftime = %A,  %b. %d %Y
				wrap = |<br/>
			}
		
		}
		
		tx_wecsermons_speakers {
		
				# Allowed data columns to search in
			searchFieldList = title,description,related_scripture,keywords		

			photo <  plugin.tx_wecsermons_pi1.listView.tx_wecsermons_sermons.graphic
			photo {
				file.width = 64m
				file.height = 64m
				wrap = |
			}

			firstname = TEXT
			firstname {
				wrap = |
			}
			
			lastname = TEXT
			lastname {
				wrap = |
			}

			url = TEXT
			url {
				typolink = 1
				typolink.parameter.field = url	
				wrap = |<br/>
				value = |
			}

			email = TEXT
			email {
				typolink = 1
				typolink.parameter.field = email		
				wrap = |<br/>
				parseFunc < tt_content.text.20.parseFunc

			}

		}
		
		tx_wecsermons_topics {
			
			title = TEXT
			title {
				wrap = |<br/>
			}
			
			description = TEXT
			description {
				crop = 75|...
				parseFunc < tt_content.text.20.parseFunc
			}

		}

	}
	
	searchView {
		orderByList = uid,title,related_scripture,keywords
		
		#	Error generated if piVars['sword'] is not set
		searchError = searchView() was called, but no sword value was found!
		searchError.wrap = <h1>|</h1>
	}
}